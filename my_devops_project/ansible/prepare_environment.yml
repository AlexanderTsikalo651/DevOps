- name: Prepare environment
  hosts: all
  become: yes

  tasks:
    - name: Проверка установки Docker
      command: docker --version
      register: docker_installed
      ignore_errors: yes

    - name: Вывод версии Docker
      debug:
        var: docker_installed.stdout
      when: docker_installed.rc == 0

    - name: Установка Docker, если он не установлен
      apt:
        name: docker.io
        state: latest
        update_cache: yes
      when: docker_installed.rc != 0

    - name: Проверка установки Docker Compose
      command: docker-compose --version
      register: compose_installed
      ignore_errors: yes

    - name: Вывод версии Docker Compose
      debug:
        var: compose_installed.stdout
      when: compose_installed.rc == 0

    - name: Получение последней версии Docker Compose
      command: "curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d '\"' -f 4"
      register: compose_version
      when: compose_installed.rc != 0

    - name: Установка Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ compose_version.stdout }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: 'u+x'
      when: compose_installed.rc != 0

    - name: Удаление директории фронтенд репозитория, если она существует
      file:
        path: "{{ lookup('env', 'WORKSPACE') }}/frontend1"
        state: absent

    - name: Клонирование фронтенд репозитория
      git:
        repo: 'https://github.com/AlexanderTsikalo651/frontend1.git'
        dest: "{{ lookup('env', 'WORKSPACE') }}/frontend1"

    - name: Удаление директории бэкенд репозитория, если она существует
      file:
        path: "{{ lookup('env', 'WORKSPACE') }}/backend1"
        state: absent

    - name: Клонирование бэкенд репозитория
      git:
        repo: 'https://github.com/AlexanderTsikalo651/backend1.git'
        dest: "{{ lookup('env', 'WORKSPACE') }}/backend1"

    - name: Удаление директории DevOps, если она существует
      file:
        path: "{{ lookup('env', 'WORKSPACE') }}/DevOps"
        state: absent

    - name: Клонирование репозитория DevOps
      git:
        repo: 'https://github.com/AlexanderTsikalo651/DevOps.git'
        dest: "{{ lookup('env', 'WORKSPACE') }}/DevOps"


- name: Start applications
  hosts: all
  become: yes

  tasks:
    - name: Проверка наличия файла docker-compose.yml
      stat:
        path: "/home/alexander/Рабочий стол/DevOps/DevOps/docker-compose.yml"
      register: docker_compose_file

    - name: Ошибка, если файл docker-compose.yml не найден
      fail:
        msg: "Файл docker-compose.yml не найден!"
      when: not docker_compose_file.stat.exists

    - name: Запуск сервисов с помощью Docker Compose
      command: docker-compose up -d
      args:
        chdir: "/home/alexander/Рабочий стол/DevOps/DevOps"

    - name: Вывод логов контейнеров
      command: docker-compose logs
      args:
        chdir: "/home/alexander/Рабочий стол/DevOps/DevOps"
      register: compose_logs

    - name: Печать логов
      debug:
        var: compose_logs.stdout
